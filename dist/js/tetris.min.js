function rotateLeft(a){return[[a[0][3],a[1][3],a[2][3],a[3][3]],[a[0][2],a[1][2],a[2][2],a[3][2]],[a[0][1],a[1][1],a[2][1],a[3][1]],[a[0][0],a[1][0],a[2][0],a[3][0]]]}function rotateRight(a){return[[a[3][0],a[2][0],a[1][0],a[0][0]],[a[3][1],a[2][1],a[1][1],a[0][1]],[a[3][2],a[2][2],a[1][2],a[0][2]],[a[3][3],a[2][3],a[1][3],a[0][3]]]}function intersects(a,b,c,d){for(var e=0;e<4;e++)for(var f=0;f<4;f++)if(b[e][f]&&(c+e>=NUM_ROWS||d+f<0||d+f>=NUM_COLS||a[c+e][d+f]))return!0;return!1}function apply_piece(a,b,c,d){for(var e=[],f=0;f<NUM_ROWS;f++)e[f]=a[f].slice();for(var f=0;f<4;f++)for(var g=0;g<4;g++)b[f][g]&&(e[c+f][d+g]=1);return e}function kill_rows(a){for(var b=[],c=NUM_ROWS,d=NUM_ROWS;d-- >0;)for(var e=0;e<NUM_COLS;e++)if(!a[d][e]){b[--c]=a[d].slice();break}for(var d=0;d<c;d++){b[d]=[];for(var e=0;e<NUM_COLS;e++)b[d][e]=0}return{rows:b,numRowsKilled:c}}function randomPiece(){var a=[blockPiece,longPiece,tPiece,zlPiece,zrPiece,llPiece,lrPiece],b=Math.floor(Math.random()*a.length);return a[b]}function TetrisGame(){this.paused=!1,this.gameOver=!1,this.score=0,this.currentPiece=randomPiece(),this.nextPiece=randomPiece(),this.pieceY=0,this.pieceX=3,this.rows=[];for(var a=0;a<NUM_ROWS;a++){this.rows[a]=[];for(var b=0;b<NUM_COLS;b++)this.rows[a][b]=0}}function draw_blocks(a,b,c){for(var d=document.createElement("div"),e=0;e<b;e++)for(var f=0;f<c;f++){var g=document.createElement("div");g.classList.add("tetrisBlock"),a[e][f]&&g.classList.add("habitated"),g.id="block_"+e+f,d.appendChild(g)}return d}function draw_tetrisGame(a){var b=draw_tetrisLeftPane(a),c=draw_tetrisRightPane(a),d=document.createElement("div");return d.classList.add("tetrisGame"),d.appendChild(b),d.appendChild(c),d}function draw_tetrisLeftPane(a){var b=draw_tetrisScore(a),c=draw_tetrisPreview(a),d=draw_tetrisUsage(a),e=document.createElement("div");return e.classList.add("tetrisLeftPane"),e.appendChild(c),e.appendChild(b),e.appendChild(d),e}function draw_tetrisRightPane(a){var b=draw_tetrisBoard(a),c=document.createElement("div");return c.classList.add("tetrisRightPane"),c.appendChild(b),c}function draw_tetrisBoard(a){var b=a.get_rows(),c=draw_blocks(b,NUM_ROWS,NUM_COLS);return c.classList.add("tetrisBoard"),c}function draw_tetrisScore(a){var b=a.get_score(),c=document.createElement("div");return c.classList.add("tetrisScore"),c.innerHTML="<p>SCORE: "+b+"</p>",a.get_game_over()&&(c.innerHTML+="<p>GAME OVER</p>"),c}function draw_tetrisPreview(a){var b=a.get_next_piece(),c=draw_blocks(b,4,4),d=document.createElement("div");return d.classList.add("tetrisPreview"),d.appendChild(c),d}function draw_tetrisUsage(a){var b=document.createElement("div");return b.classList.add("tetrisUsage"),b.innerHTML="<table><tr><th>Cursor Keys</th><td>Steer</td></tr><tr><th>a/d</th><td>Rotate</td></tr><tr><th>Space bar</th><td>Let fall</td></tr><tr><th>Enter</th><td>Toggle pause</td></tr><tr><th>r</th><td>Restart game</td></tr></table>",b}function redraw(a,b){var c=draw_tetrisGame(a);b.innerHTML="",b.appendChild(c)}function tetris_run(a){function b(){e=setInterval(function(){d.tick()&&redraw(d,a)},TICK_MS)}function c(){f=a.addEventListener("keydown",function(b){if(!(b.shiftKey||b.altKey||b.metaKey)){var c=!0;b.keyCode===CURSOR_LEFT?d.steerLeft():b.keyCode===CURSOR_RIGHT?d.steerRight():b.keyCode===CURSOR_DOWN?d.steerDown():b.keyCode===KEY_A?d.rotateLeft():b.keyCode===KEY_D?d.rotateRight():b.keyCode===KEY_SPACE?d.letFall():b.keyCode===KEY_ENTER?d.togglePaused():b.keyCode===KEY_R?d=new TetrisGame:c=!1,c&&(b.preventDefault(),redraw(d,a))}})}var d=null,e=null,f=null;d=new TetrisGame,redraw(d,a),b(),c()}var NUM_ROWS=20,NUM_COLS=10,BLOCK_WIDTH=30,BLOCK_HEIGHT=30,TICK_MS=400,CURSOR_LEFT=37,CURSOR_RIGHT=39,CURSOR_DOWN=40,KEY_A=38,KEY_D=68,KEY_R=82,KEY_ENTER=13,KEY_SPACE=32,blockPiece=[[0,0,0,0],[0,1,1,0],[0,1,1,0],[0,0,0,0]],longPiece=[[0,0,1,0],[0,0,1,0],[0,0,1,0],[0,0,1,0]],tPiece=[[0,0,1,0],[0,1,1,0],[0,0,1,0],[0,0,0,0]],zlPiece=[[0,0,0,0],[0,0,1,1],[0,1,1,0],[0,0,0,0]],zrPiece=[[0,0,0,0],[0,1,1,0],[0,0,1,1],[0,0,0,0]],llPiece=[[0,0,1,0],[0,0,1,0],[0,1,1,0],[0,0,0,0]],lrPiece=[[0,1,0,0],[0,1,0,0],[0,1,1,0],[0,0,0,0]];TetrisGame.prototype.tick=function(){if(this.paused||this.gameOver)return!1;if(intersects(this.rows,this.currentPiece,this.pieceY+1,this.pieceX)){this.rows=apply_piece(this.rows,this.currentPiece,this.pieceY,this.pieceX);var a=kill_rows(this.rows);this.rows=a.rows,this.score+=1+a.numRowsKilled*a.numRowsKilled*NUM_COLS,intersects(this.rows,this.nextPiece,0,NUM_COLS/2-2)?this.gameOver=!0:(this.currentPiece=this.nextPiece,this.pieceY=0,this.pieceX=NUM_COLS/2-2,this.nextPiece=randomPiece())}else this.pieceY+=1;return!0},TetrisGame.prototype.togglePaused=function(){this.paused=!this.paused},TetrisGame.prototype.steerLeft=function(){intersects(this.rows,this.currentPiece,this.pieceY,this.pieceX-1)||(this.pieceX-=1)},TetrisGame.prototype.steerRight=function(){intersects(this.rows,this.currentPiece,this.pieceY,this.pieceX+1)||(this.pieceX+=1)},TetrisGame.prototype.steerDown=function(){intersects(this.rows,this.currentPiece,this.pieceY+1,this.pieceX)||(this.pieceY+=1)},TetrisGame.prototype.rotateLeft=function(){var a=rotateLeft(this.currentPiece);intersects(this.rows,a,this.pieceY,this.pieceX)||(this.currentPiece=a)},TetrisGame.prototype.rotateRight=function(){var a=rotateRight(this.currentPiece);intersects(this.rows,a,this.pieceY,this.pieceX)||(this.currentPiece=a)},TetrisGame.prototype.letFall=function(){for(;!intersects(this.rows,this.currentPiece,this.pieceY+1,this.pieceX);)this.pieceY+=1;this.tick()},TetrisGame.prototype.get_rows=function(){return apply_piece(this.rows,this.currentPiece,this.pieceY,this.pieceX)},TetrisGame.prototype.get_next_piece=function(){return this.nextPiece},TetrisGame.prototype.get_score=function(){return this.score},TetrisGame.prototype.get_game_over=function(){return this.gameOver};
//# sourceMappingURL=tetris.min.js.map